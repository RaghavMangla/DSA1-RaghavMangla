class Solution {
    public int search(int[] nums, int target) {
        int min=minBS(nums,0, nums.length-1);
        if(BS(nums,target,min,nums.length-1)!=-1){
            return BS(nums,target,min,nums.length-1);
    }
        else{
            return BS(nums,target,0,min-1);
        }
    }
        
        public int minBS(int[] arr,int s,int e){//at 1st call s=0 and end=arr.l-1
                if(s==e) {
                        return s;
                }
                while(s<e){
                        int m=s+(e-s)/2;
                                //potential ans
                                //min=arr[m];
                                if(arr[m]>arr[e]){
                                        s=m+1;
                                }
                                else {
                                        if(e-s==1) {
                                                return m;
                                        }
                                        else {
                                               e=m;
                                        }
                                }
                        }
                 return -1;       
                }
        
        
        
        
        
        
        
        public int BS(int[] arr, int target,int s,int e){
                while(s<=e){
                        int m=s+(e-s)/2;
                        if(arr[m]==target){
                                return m;
                        }
                        else if(arr[m]>target){
                                e=m-1;
                        }
                        else{
                                s=m+1;
                        }

                }
                return -1;
    }
}